name: 'Build'
env:
  NUGET_PACKAGE_ID: Chorizite.Plugins.Lua
on:
  push:
    branches:
      - master
      - main
jobs:
  build:
    permissions:
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.1.2
        with:
          versionSpec: '6.0.x'

      - name: Determine Version
        id: version_step # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.1.2

      - name: Update manifest version
        run: |
            echo "$( jq '.version = "${{ env.GitVersion_FullSemVer }}"' ${{ github.workspace }}/manifest.json )" > ${{ github.workspace }}/manifest.json

      - name: Build
        run: |
          # build
          dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet restore
          dotnet build -c Release --no-restore

      - uses: actions/upload-artifact@v4
        with: 
          name: "${{ env.GitVersion_FullSemVer }}.nupkg"
          path: "${{ env.NUGET_PACKAGE_ID }}.${{ env.GitVersion_FullSemVer }}.nupkg"

      - uses: actions/upload-artifact@v4
        with: 
          name: "${{ env.NUGET_PACKAGE_ID }}.${{ env.GitVersion_FullSemVer }}.zip"
          path: "${{ github.workspace }}/bin/net8.0/"
      
      - name: Push GitHub NuGet Package
        run: |
          dotnet nuget push "${{ env.NUGET_PACKAGE_ID }}.${{ env.GitVersion_FullSemVer }}.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"